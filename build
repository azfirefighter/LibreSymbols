#! /usr/bin/env bash

# This is a script to build LibreSymbols extensions.
#
# LibreSymbols
#
# Stefan Schmidhuber (stefan.schmidhuber@gmx.at)

# target directory for extension files
EXTENSIONS=.

# get the last git tag as vesion number
VERSION=$(git tag | tail -n 1)

print_help() {
  echo -e 'Usage:\tbuild\t\t\tbuild extensions'
  echo -e '\tbuild -h | --help\tprint this help\n'
  echo -e '\tBuilds a LibreSymbols extension of the currently ckecked out commit.'
  echo -e '\tIndependet of the actual version, the latest git tag will be used as'
  echo -e '\tversion number.\n'
  exit 0
}

build_extension() {
  for LANG in $(ls gallery); do
    # create temporary directory
    TEMP_DIR=$(mktemp -d)

    # copy files
    cp description.xml ${TEMP_DIR}/description.xml
    cp doc/icon_100.png ${TEMP_DIR}/icon.png
    cp Paths.xcu ${TEMP_DIR}/Paths.xcu
    cp -r license ${TEMP_DIR}/license
    cp -r META-INF ${TEMP_DIR}/META-INF
    mkdir ${TEMP_DIR}/gallery
    cp gallery/${LANG}/* ${TEMP_DIR}/gallery/
    cd ${TEMP_DIR}

    # set meta data
    awk '{sub(/VERSION/, '${VERSION}'); print $0}' description.xml > description.xml_changed
    mv description.xml_changed description.xml

    # zip files
    zip -rq LibreSymbols_${VERSION}_${LANG}.zip *
    mv LibreSymbols_${VERSION}_${LANG}.zip ${WORKING_DIR}/${EXTENSIONS}/LibreSymbols_${VERSION}_${LANG}.oxt

    # clean up
    cd ${WORKING_DIR}
    rm -r ${TEMP_DIR}
  done
  return 0
}


# entry point
echo '' # just an empty line for better readability of the following output

if [[ $# -gt 1 ]]; then
  echo -e 'ERROR: Invalid number of arguments.\n'
  print_help
  exit 1
fi

if [[ ! -z $1 ]]; then
  if [[ $1 = "-h" ]] || [[ $1 = "-help" ]] || [[ $1 = "--help" ]] || [[ $1 = "-?" ]]; then
    print_help
  else
    echo -e 'ERROR: Invalid argument "'$1'"\n'
    print_help
    exit 1
  fi
fi

# remember current directory and branch
WORKING_DIR=$(pwd)

# remove old builds
if [[ $(ls ${EXTENSIONS}/LibreSymbols_${VERSION}_* 2>/dev/null | wc -w) -gt 0 ]]; then
  echo 'delete old builds ...'
  rm ${EXTENSIONS}/LibreSymbols_${VERSION}_*
fi

echo 'building LibreSymbols '${VERSION}' ... '
build_extension

# success or error message
if [[ $(ls -l ${EXTENSIONS}/LibreSymbols_${VERSION}_* 2>/dev/null | wc -l) -eq $(ls gallery | wc -w) ]]; then
  echo -e 'finished successful\n'
else
  echo -e 'failed\n'
  exit 1
fi

exit 0
